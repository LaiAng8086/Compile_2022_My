declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a1 = constant i32 1
@b1 = constant i32 2
@c1 = constant i32 3
@d1 = global i32 4
@e1 = global i32 0
@f1 = global i32 60
@test = global i32 777
@_str_0 = constant [10 x i8] c"20231055\0a\00"
@_str_1 = constant [2 x i8] c"\0a\00"
@_str_2 = constant [2 x i8] c"\0a\00"
@_str_3 = constant [2 x i8] c"\0a\00"
@_str_4 = constant [2 x i8] c"\0a\00"
@_str_5 = constant [2 x i8] c"\0a\00"
@_str_6 = constant [2 x i8] c"\0a\00"
define i32 @op1(i32 %l1){
b0:
  %l2 = alloca i32
  store i32 %l1, i32* %l2
  %l3 = load i32, i32* %l2
  %l4 = add i32 1, %l3
  ret i32 %l4
}
define i32 @op2(){
b0:
  ret i32 1
}
define void @op3(){
b0:
  store i32 666, i32* @test
  ret void
}
define i32 @op4(i32 %l1, i32 %l3){
b0:
  %l2 = alloca i32
  %l4 = alloca i32
  store i32 %l1, i32* %l2
  store i32 %l3, i32* %l4
  %l5 = load i32, i32* %l2
  %l6 = load i32, i32* %l4
  %l7 = add i32 %l5, %l6
  ret i32 %l7
}
define i32 @main(){
b0:
  %l1 = alloca i32
  %l2 = alloca i32
  %l3 = alloca i32
  %l4 = alloca i32
  %l5 = alloca i32
  store i32 2, i32* %l1
  store i32 3, i32* %l2
  store i32 1, i32* %l4
  store i32 6, i32* %l5
  %l6 = getelementptr inbounds [10 x i8], [10 x i8]* @_str_0, i32 0, i32 0
  call void @putstr(i8* %l6)
  %l7 = call i32 @getint()
  store i32 %l7, i32* %l4
  %l8 = load i32, i32* %l1
  %l9 = load i32, i32* %l2
  %l10 = call i32 @op4(i32 %l8, i32 %l9)
  store i32 %l10, i32* %l3
  %l11 = load i32, i32* %l3
  call void @putint(i32 %l11)
  %l12 = getelementptr inbounds [2 x i8], [2 x i8]* @_str_1, i32 0, i32 0
  call void @putstr(i8* %l12)
  %l13 = load i32, i32* %l5
  %l14 = call i32 @op1(i32 %l13)
  store i32 %l14, i32* %l3
  %l15 = load i32, i32* %l3
  call void @putint(i32 %l15)
  %l16 = getelementptr inbounds [2 x i8], [2 x i8]* @_str_2, i32 0, i32 0
  call void @putstr(i8* %l16)
  call void @op3()
  %l18 = load i32, i32* @test
  call void @putint(i32 %l18)
  %l19 = getelementptr inbounds [2 x i8], [2 x i8]* @_str_3, i32 0, i32 0
  call void @putstr(i8* %l19)
  %l20 = call i32 @op2()
  store i32 %l20, i32* %l3
  %l21 = load i32, i32* %l3
  call void @putint(i32 %l21)
  %l22 = getelementptr inbounds [2 x i8], [2 x i8]* @_str_4, i32 0, i32 0
  call void @putstr(i8* %l22)
  store i32 16, i32* %l3
  %l23 = load i32, i32* %l3
  call void @putint(i32 %l23)
  %l24 = getelementptr inbounds [2 x i8], [2 x i8]* @_str_5, i32 0, i32 0
  call void @putstr(i8* %l24)
  store i32 1, i32* %l3
  %l25 = load i32, i32* %l3
  call void @putint(i32 %l25)
  %l26 = getelementptr inbounds [2 x i8], [2 x i8]* @_str_6, i32 0, i32 0
  call void @putstr(i8* %l26)
  ret i32 0
}
